server {
    listen       80;
    server_name  _;

    # 全局变量，从环境变量中获取后端URL
    # 这里使用占位符，会在启动时被替换
    set $backend_url "__YACD_DEFAULT_BACKEND__";

    # 主应用路由
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # 将auto字符串替换为自动检测JavaScript
        sub_filter '"auto"' 'window.location.hostname ? "http://" + window.location.hostname + ":9090" : "http://127.0.0.1:9090"';
        
        # 如果是具体URL则保持不变
        sub_filter '__YACD_DEFAULT_BACKEND__' '$backend_url';
        
        sub_filter_once off;
    }

    # 静态资源处理
    location ~ assets\/.*\.(?:css|js|woff2?|svg|gif|map)$ {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "max-age=31536000";
    }

    # Python应用反向代理 - 主路径
    location /sub {
        proxy_pass http://localhost:7888/;  # 内部转发到根路径
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # CORS支持
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
        
        # 处理OPTIONS预检请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # 处理WebSocket升级（如有需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Python应用静态资源
    location /sub/static/ {
        proxy_pass http://localhost:7888/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        expires 1d;
        add_header Cache-Control "public";
    }

    # 代理订阅服务API
    location /subscribe/ {
        rewrite ^/subscribe/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:7888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 订阅助手主页 (备用方式访问)
    location /subscribe {
        proxy_pass http://127.0.0.1:7888/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 健康检查接口
    location /health {
        proxy_pass http://127.0.0.1:7888/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}